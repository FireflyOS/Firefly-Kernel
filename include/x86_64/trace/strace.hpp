#pragma once

namespace firefly::trace {
#define PANIC_M constexpr const char*
#define PANIC_C constexpr const int

PANIC_M PM_OUTOFMEMORY     = "OUT_OF_MEMORY_EXCEPTION";
PANIC_M PM_OUTOFBOUNDS     = "OUT_OF_BOUNDS_EXCEPTION";
PANIC_M PM_DRIVERERROR_PK  = "PS2_KEYBOARD_DRIVER_ERROR";
PANIC_M PM_DRIVERERROR_S   = "SERIAL_PORT_DRIVER_ERROR";
PANIC_M PM_DRIVERERROR_V   = "VBE_DRIVER_ERROR";
PANIC_M PM_MANUALLYCRASHED = "MANUALLY_CRASHED";

PANIC_C PC_OUTOFMEMORY     = 0x100E000F;
PANIC_C PC_OUTOFBOUNDS     = 0x100E100F;
PANIC_C PC_DRIVERERROR_PK  = 0x100F3C40;
PANIC_C PC_DRIVERERROR_S   = 0x100F1450;
PANIC_C PC_DRIVERERROR_V   = 0x100FFF00;
PANIC_C PC_MANUALLYCRASHED = 0x10FFFFFF;

//PM — Panic Message
//PC — Panic Code
void trace_stack();
void panic(const char *P_REASON, const int P_ERRCODE);
}  // namespace firefly::trace